Λειτουργία Αρχείων και Αντικειμένων
Αρχικοποίηση Εφαρμογής:

Κατά την εκκίνηση, το JSONHandler φορτώνει τα δεδομένα από το tasks.json και δημιουργεί αντικείμενα Task.
Τα αντικείμενα Task παραμένουν στη μνήμη και αποθηκεύονται σε μια λίστα (List<Task>).
Επεξεργασία Δεδομένων:

Όταν γίνεται επεξεργασία ή τροποποίηση ενός Task, ενημερώνεται η αναφορά του αντικειμένου στη λίστα που βρίσκεται στη μνήμη.
Οι αλλαγές δεν καταγράφονται αμέσως στο JSON αρχείο.
Αποθήκευση Δεδομένων:

Κατά το κλείσιμο της εφαρμογής (primaryStage.setOnCloseRequest), καλείται η JSONHandler.saveTasks για να αποθηκευτούν όλα τα αντικείμενα από τη λίστα List<Task> στο αρχείο tasks.json.


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
ΑΡΧΕΙΑ ΚΩΔΙΚΑ

MainApp.java
Είναι η κύρια κλάση της εφαρμογής.
Εκκινεί την εφαρμογή JavaFX, φορτώνοντας το κύριο παράθυρο μέσω του FXMLLoader.
Διαχειρίζεται το κλείσιμο της εφαρμογής, αποθηκεύοντας όλες τις πληροφορίες (εργασίες, κατηγορίες, επίπεδα προτεραιότητας) σε JSON αρχεία.
Σχετίζεται άμεσα με τον MainController, καθώς ανακτά τον έλεγχο δεδομένων από αυτόν.

MainController.java
Ελέγχει τη βασική διεπαφή χρήστη (UI) που φορτώνεται από το main.fxml.
Φορτώνει εργασίες (Task) από το JSON μέσω του JSONHandler κατά την αρχικοποίηση.
Συνδέει τις εργασίες με το ListView για εμφάνιση στη λίστα.
Περιλαμβάνει λειτουργικότητα για:
Προσθήκη νέων εργασιών (onAddTask).
Επεξεργασία υφιστάμενων εργασιών μέσω διαλόγου (editTask).
Αποθήκευση των δεδομένων στην έξοδο της εφαρμογής.

TaskController.java
Ελέγχει το διάλογο που εμφανίζεται κατά την προσθήκη ή επεξεργασία μιας εργασίας.
Χρησιμοποιεί τα στοιχεία της διεπαφής, όπως TextField, ComboBox και DatePicker, για να συλλέξει τις πληροφορίες μιας εργασίας.
Επικοινωνεί με τον MainController για να επιστρέψει την νέα ή ενημερωμένη εργασία.
Περιλαμβάνει επιλογή διαγραφής εργασίας.

JSONHandler.java
Είναι η βοηθητική κλάση για τη διαχείριση δεδομένων JSON.
Παρέχει μεθόδους για:
Φόρτωση εργασιών από το tasks.json (loadTasks).
Αποθήκευση εργασιών στο ίδιο αρχείο (saveTasks).
Αντίστοιχες λειτουργίες για κατηγορίες (categories.json) και προτεραιότητες (priorities.json).
Εξασφαλίζει ότι οι αλλαγές που γίνονται κατά τη διάρκεια χρήσης της εφαρμογής αποθηκεύονται με συνέπεια.



\\\\\\\\\\\\\
SHARED DATA

Δημιούργησε ένα "Shared Data" Singleton για τα δεδομένα Δημιούργησε μια κλάση που διαχειρίζεται τις κατηγορίες και τις προτεραιότητες, ώστε να μπορείς να έχεις κεντρική διαχείριση.

Κεντρική Διαχείριση Δεδομένων: Όλα τα δεδομένα βρίσκονται στο SharedData, πράγμα που επιτρέπει εύκολη διαχείριση και ανανέωση.
Αποφυγή Static Μεθόδων: Δεν χρειάζεται να χρησιμοποιήσεις static λίστες, διατηρώντας την αρχιτεκτονική καθαρή.
Δυναμική Ενημέρωση: Όταν αλλάζουν τα δεδομένα στον MainController, ο TaskController βλέπει αυτόματα τις αλλαγές.
